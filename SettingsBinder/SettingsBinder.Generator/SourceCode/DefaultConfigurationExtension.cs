namespace TomRR.SourceGenerator.SettingsBinder.SourceCode;

public static class DefaultConfigurationExtension
{
    public const string SourceCode = $@"//<auto-generated/>
using Microsoft.Extensions.Configuration;
using System.IO;

namespace {Constance.NamespaceBase};

/// <summary>
/// Adds a default configuration pipeline with base path, JSON files, user secrets, and environment variables.
/// Suitable for most applications.
/// </summary>
/// <typeparam name=""T"">
/// A marker type used to locate the assembly for user secrets (commonly <c>Program</c>).
/// </typeparam>
/// <param name=""builder"">The configuration builder instance.</param>
/// <returns>The same <see cref=""IConfigurationBuilder""/> instance for chaining.</returns>
public static class ConfigurationBuilderDefaultsExtensions
{{
    /// <summary>
    /// Adds a pre-configured default configuration pipeline including base path, JSON files, user secrets, and environment variables.
    /// </summary>
    public static IConfigurationBuilder AddDefaultConfigurationSources<T>(this IConfigurationBuilder builder) where T : class 
        => builder
            .SetBasePath(Directory.GetCurrentDirectory())
            .AddJsonFile(""appsettings.json"", optional: false, reloadOnChange: true)
            .AddJsonFile(""appsettings.Development.json"", optional: true, reloadOnChange: true)
            .AddUserSecrets<T>()
            .AddEnvironmentVariables();
}}";
}