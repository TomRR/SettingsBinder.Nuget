namespace TomRR.SourceGenerator.SettingsBinder.SourceCode;

public class SettingsBinderExtension
{
    public static string SourceCode(IEnumerable<(string Namespace, string ClassName, string SectionName)> settingsTypes) => $$$"""
           // <auto-generated/>
           using Microsoft.Extensions.Configuration;
           using Microsoft.Extensions.DependencyInjection;

           namespace {{{Constance.NamespaceBase}}};

           /// <summary>
           /// Provides extension methods to register all generated [Settings] classes into the dependency injection container.
           /// </summary>
           public static class SettingsBinderExtensions
           {
               /// <summary>
               /// Adds all generated settings classes to the WebApplicationBuilder's dependency injection container.
               /// Each settings class is bound to its corresponding configuration section with validation enabled.
               /// </summary>
               public static WebApplicationBuilder AddSettingsOptions(this WebApplicationBuilder builder)
               {
           {{{string.Join("", settingsTypes.Select(s =>
               $"    {GetOptionBinding(s.Namespace, s.ClassName)}\n"))}}}        return builder;
               }
           }
           """;
    
    private static string GetOptionBinding(string @namespace, string className) => $$"""
              builder.Services
                    .AddOptions<global::{{@namespace}}.{{className}}>()
                    .Bind(builder.Configuration.GetSection(global::{{@namespace}}.{{className}}.SectionName))
                    .ValidateDataAnnotations()
                    .ValidateOnStart();
                    
          """;
}